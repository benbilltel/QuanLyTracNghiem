 protected override object TranferObj (object us,string action)
 {
     if (us is UserAdmin userAdmin)
     {
         DTO_UserAdmin dto_us = new DTO_UserAdmin();
         dto_us.Ma = userAdmin.Ma;
         dto_us.TaiKhoan = userAdmin.TaiKhoan;
         dto_us.MatKhau = userAdmin.MatKhau;
         return dto_us;
     }
     if (us is DTO_UserAdmin dTO_UserAdmin)
     {
         UserAdmin usAD = new UserAdmin();
         usAD.Ma = dTO_UserAdmin.Ma;
         usAD.TaiKhoan = dTO_UserAdmin.TaiKhoan;
         usAD.MatKhau = dTO_UserAdmin.MatKhau;
         return usAD;

     }
     if (us is DTO_UserAdmin dTO_UserAdmin2 && action.Equals("Save"))
     {
         UserAdmin usAD = new UserAdmin();
         usAD.Ma = dTO_UserAdmin2.AutoGenMa();
         usAD.TaiKhoan = dTO_UserAdmin2.TaiKhoan;
         usAD.MatKhau = dTO_UserAdmin2.MatKhau;
         return usAD;

     }
     return null;
     
 }
 public void Read()
 {
    listUs.Clear();
    foreach (UserAdmin us in db.UserAdmins)
     {   
         if(TranferObj(us,"none") is DTO_UserAdmin dtoUserAdmin)
         {
             listUs.Add(dtoUserAdmin);
         }
         
     }
 }
 public DTO_UserAdmin Insert(DTO_UserAdmin dtoUS)
 {
     if(TranferObj(dtoUS,"Save") is UserAdmin userAdmin)
     {
         db.UserAdmins.Add(userAdmin);
         if(db.Entry(userAdmin).State == System.Data.Entity.EntityState.Added)
         {
             try
             {
                if( db.SaveChanges()>0){
                     if (TranferObj(userAdmin, "none") is DTO_UserAdmin dtoUserAdmin)
                     {
                         listUs.Add(dtoUserAdmin);
                         return dtoUserAdmin;
                     }
                 }
             }
             catch 
             {
                 return null;
             }
         }
         return null;
     }
     return dtoUS;
 }
 public DTO_UserAdmin Update(DTO_UserAdmin dtoUS)
 {
     var userAdminToUpdate = db.UserAdmins.FirstOrDefault(ua => ua.Ma == dtoUS.Ma);
     if (userAdminToUpdate != null)
     {
         userAdminToUpdate.MatKhau = dtoUS.MatKhau;

         if(db.Entry(userAdminToUpdate).State == System.Data.Entity.EntityState.Modified) {
             try
             {
                 if (db.SaveChanges() > 0)
                 {
                     var updatedDtoUS = TranferObj(userAdminToUpdate, "none") as DTO_UserAdmin;
                     var index = listUs.FindIndex(ua => ua.Ma == updatedDtoUS.Ma);
                     if (index != -1)
                     {
                         listUs[index] = updatedDtoUS;
                     }
                     return updatedDtoUS;
                 }
             }
             catch
             {
                 return null;
             }
         }
        
     }
     return dtoUS;
 }
 public List<DTO_UserAdmin> Delete (List<DTO_UserAdmin> dTO_UserAdmins)
 {
     foreach(DTO_UserAdmin dTO_UserAdmin in dTO_UserAdmins)
     {
         var usAD = db.UserAdmins.FirstOrDefault(ua => ua.Ma == dTO_UserAdmin.Ma);
         if (usAD != null)
         {
             db.UserAdmins.Remove(usAD);
             if(db.Entry(usAD).State == System.Data.Entity.EntityState.Deleted)
             {
                 db.SaveChanges();
                 DTO_UserAdmin itemRemove = listUs.Find(ua => ua.Ma == dTO_UserAdmin.Ma);
                 listUs.Remove(itemRemove);
             }
             else
             {
                 return null;
             }
         }
         else
         {
             return null;
         }
     }
     
     return listUs;
 }



-----------------------------------------------------------------
 public UserAdmin_Ser() {
     us_repo = new UserAdmin_Repo();
     us_repo.Read();
     tblData = new DataTable();
     tblData.Columns.Add("Ma", typeof(int));
     tblData.Columns.Add("Tài khoản", typeof(string));
     tblData.Columns.Add("Mật khẩu", typeof(string));
 }  
 private UserAdmin_Repo us_repo;
 public DataTable tblData;
 public void Load()
 {
     DataTable tblTemp = new DataTable();
     tblTemp.Columns.Add("Mã", typeof(int));
     tblTemp.Columns.Add("Tài khoản", typeof(string));
     tblTemp.Columns.Add("Mật khẩu", typeof(string));
     foreach (DTO_UserAdmin dtoUs in us_repo.listUs)
     {
         DataRow row = tblTemp.NewRow();
         row["Mã"] = dtoUs.Ma;
         row["Tài khoản"] = dtoUs.TaiKhoan;
         row["Mật khẩu"] = dtoUs.MatKhau;
         tblTemp.Rows.Add(row);  
     }
     tblData = tblTemp;
 }
 public void Save(int action,DTO_UserAdmin us) {
     if(action == 0) {
         
         DTO_UserAdmin dTO_UserAdmin = us_repo.Insert(us);
         if(dTO_UserAdmin == null) { throw new ArgumentException("Lưu thất bại"); }
         DataRow row = tblData.NewRow();
         row["Mã"] = dTO_UserAdmin.Ma;
         row["Tài khoản"] = dTO_UserAdmin.TaiKhoan;
         row["Mật khẩu"] = dTO_UserAdmin.MatKhau;
         tblData.Rows.Add(row);
     }
     if(action == 1){
         DTO_UserAdmin dTO_UserAdmin = us_repo.Update(us);
         if (dTO_UserAdmin == null) { throw new ArgumentException("Cập nhật thất bại"); }
         foreach (DataRow row in tblData.Rows)
         {
             if ((int)row["Mã"] == us.Ma)
             {
                 row["Mật khẩu"] = us.MatKhau;
             }
         }
     }
 }
 public void Remove(List<DTO_UserAdmin> dTO_UserAdmins)
 {
     List<DTO_UserAdmin> tempList = us_repo.Delete(dTO_UserAdmins);
     if(tempList == null) { throw new ArgumentException("Xóa thất bại"); }
     Load();
 }